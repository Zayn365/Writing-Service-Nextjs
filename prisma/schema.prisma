generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type UsersAddress {
  address    String
  city       String
  country    String
  streetName String
  zip        String
}

model clients {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  address           String
  affiliateId       String
  city              String
  completedArticles Int
  country           String
  createdAt         DateTime @db.Date
  email             String
  ipAddress         String
  isDeleted         Boolean
  modifiedAt        DateTime @db.Date
  name              String
  password          String
  paypalId          String
  phone             String
  profileImage      String
  refererId         Int
  referringPoints   Int
  roleId            Int
  status            Int
  streetName        String
  token             String
  username          String
  zip               String
}

model orders {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  affiliateAmount     String
  affiliateAmountPaid Int
  affiliateId         String
  date                DateTime @db.Date
  orderNo             String
  originalAmount      String
  paymentType         String
  status              Int
  totalAmount         String
  userId              Int
}

model testimonials {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  text  String
  title String
}

model users {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  /// Multiple data types found: Int: 8.3%, BigInt: 91.7% out of 12 sampled entries
  address          UsersAddress
  categories       String[]
  date             DateTime     @db.Date
  declined         Boolean
  editorRating     Float
  email            String       @unique(map: "email_1")
  isChiefEditor    Boolean
  isEditor         Boolean
  name             String
  password         String
  paypalId         String
  phoneNumber      String
  profileImage     String
  rating           Float
  status           String
  userType         String
  writerSampleFile String
}
